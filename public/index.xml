<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS-GY-6613 Artificial Intelligence - Spring 2020 on CS-GY-6613 Spring 2020</title>
    <link>http://pantelis.github.io/cs-gy-6613-spring-2020/</link>
    <description>Recent content in CS-GY-6613 Artificial Intelligence - Spring 2020 on CS-GY-6613 Spring 2020</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://pantelis.github.io/cs-gy-6613-spring-2020/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Course Introduction</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/course-introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/course-introduction/</guid>
      <description>AI Evolution according to DARPA If engineering difficulty has a pinnacle today this must be in AI domains that combines ML, optimal control and planning. autonomous cars and humanoids from Boston Dynamics fit the bill.
Initially there were rules.
 In the 1980s knowledge-base systems that hard-coded knowledge about the world in formal languages.  IF this happens, THEN do that.   They failed to get significant traction as the number of rules that are needed to model the real world exploded.</description>
    </item>
    
    <item>
      <title>A systems approach to AI</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/systems-approach/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/systems-approach/</guid>
      <description>The four approaches towards AI The Turing Test Approach A 5-min behavioral intelligence test, where an interrogator chats with the player and at the end it guesses if the conversation is with a human or with a programmed machine. A Turing contest (Loebner Prize) is is held annually since 1991.
This course&amp;rsquo;s projects includes the Alexa prize which is not a turing test. The Alexa Prize creates social bots that engage in interesting, human-like conversations, not to make them indistinguishable from a human when compared side-by-side.</description>
    </item>
    
    <item>
      <title>AI Software Stack</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/ai-stack-pipelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/ai-stack-pipelines/</guid>
      <description>A typical AI stack today As we have seen from the syllabus, this course approaches supervised and unsupervised learning methods from an applied perspective - this means teaching concepts but at the same time looking how these concepts are applied in the industry to solve real world problems. In this respect here we take an architecture driven AI, presenting the components of AI in a form of a software stack but also how the components are mechanized in what we call ML Pipelines to provide the ML utility to applications.</description>
    </item>
    
    <item>
      <title>The Way of Working in AI</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/ai-way-of-working/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/ai-way-of-working/</guid>
      <description>A Positive Reinforcement Loop What are the disciplines that need to cross fertilize to get a system that possesses intelligence? Lets start with a diagram that show not only the disciplines but also a way of working for the many specialists involved.
The diagram above highlights three fundamental axes that can deliver a system-based approach to AI. The Z axis is the scientific axis where many disciplines such as psychology, neuroscience, mathematics and others make progress on.</description>
    </item>
    
    <item>
      <title>Intelligent Agents and Representations</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/agents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/agents/</guid>
      <description>Agent-Environment Interface  An agent is a computer system that is situated in some environment, and that is capable of autonomous action in this environment in order to meet its design objectives.
 </description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/test/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/test/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/ai-intro-deck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ai-intro/ai-intro-deck/</guid>
      <description>footer: CS-GY-6613 slidenumbers: true autoscale: true
Introduction to AI Pantelis Monogioudis, Jan 2020
 Anything wrong with this boat? ^ Imagine you are in 1844 (Cumberland Basin, April 1844) Value of Commerce. Anything wrong with this boat?
 AI Development - Wave I  Wave I is known as Good Old-Fashioned AI (GOFAI) It is still being used today.   AI Development - Wave II  Wave II is known as Connectionism It is what Deep Learning is today.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/projects/</guid>
      <description>The following projects needs to be delivered by the deadlines.
 Surface Type Classification - Due 2/23/2020 11:59pm Lifelong Learning - Robotic Vision - Due 3/29/2020 11:59pm TBD - Due 5/10/2020 11:59pm  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/setup/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Project 1 - Surface Type Classification</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/project-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/project-1/</guid>
      <description>  Your first project description is published in https://www.kaggle.com/c/career-con-2019/overview
  You must submit your assignment with the results by 11:59pm 2/23/2020. The submission will be done by sharing the github/kaggle notebook with the TA.
  </description>
    </item>
    
    <item>
      <title>Project 2 - Continual Learning for Robotic Perception</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/project-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/project-2/</guid>
      <description>One of the greatest goals of AI is building an artificial continual learning agent which can construct a sophisticated understanding of the external world from its own experience through the adaptive, goal-oriented and incremental development of ever more complex skills and knowledge. Continual learning is essential in robotics where high dimensional data streams need to be constantly processed and where naïve continual learning strategies have been shown to suffer from catastrophic forgetting.</description>
    </item>
    
    <item>
      <title>Project 3</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/project-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/project-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Your Programming Environment</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/setup/env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/projects/setup/env/</guid>
      <description>Starting Jupyter in Google Colab The runtime performance will greatly improve for some projects using the free GPU resources provided by Google Colab. In this course we will make use of these facilities - the good news is that you have an account in Google Colab as most of you have a google account. If not go ahead and create one to be able to login into Google colab. You will need Google Colab for all your projects so that you can demonstrate that your results can be replicated.</description>
    </item>
    
  </channel>
</rss>