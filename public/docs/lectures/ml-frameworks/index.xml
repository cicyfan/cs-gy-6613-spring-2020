<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Background - ML Frameworks on CS-GY-6613 Spring 2020</title>
    <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/</link>
    <description>Recent content in Background - ML Frameworks on CS-GY-6613 Spring 2020</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Development Workflow</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/development-workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/development-workflow/</guid>
      <description>Workflow Steps Although the ML project checklist provided in Appendix B of Garon&amp;rsquo;s book is extensive (we will go through this list in the lecture as we go through your first ML application) for now focus on the eight steps as shown below.
Steps in workflow (from here)
 As discussed the data pipeline is responsible for providing the training datasets if the aim is to train (or retrain) a model.</description>
    </item>
    
    <item>
      <title>Introduction to Tensorflow</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/tensorflow-introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/tensorflow-introduction/</guid>
      <description>In this lecture we will cover slides #1 - #28 as shown below. The slides are from CS 20: Tensorflow for Deep Learning Research and despite the title are appropriate for Tensorflow beginners. Slides beyond #28 will be selectively consulted when we go over gradients and backpropagation.
 </description>
    </item>
    
    <item>
      <title>Numerical Python (Numpy/Scipy and Pandas)</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/numpy-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/numpy-pandas/</guid>
      <description>Standard Python Below is a list of recommended courses you can attend to. We will go over briefly basic Python in this lecture. The tutorials below are self contained and can remind you the basics.
 CodeAcademy Data Science Path. Take Python modules 4-10. This course contains Numpy and Panda intro as well.
 Kaggle Python Course
 Google Python Class This is a bit dated as it covers Python 2, but it is still highly regarded as Python 3 and 2 have few differences.</description>
    </item>
    
    <item>
      <title>The Zillow App</title>
      <link>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/zillow-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pantelis.github.io/cs-gy-6613-spring-2020/docs/lectures/ml-frameworks/zillow-app/</guid>
      <description>The Zillow app is based on the end to end machine learning example in Chapter 2 of Geron&amp;rsquo;s book. We can go through this end to end example during a recitation.
 Key Questions  Is the dataset appropriate for training?   Any unexpected ranges, any range heterogeneity, any clipping? Do we face long-tails? What options do we have to glean the data?
  What will happen if we remove the following line from the split_train_set function?</description>
    </item>
    
  </channel>
</rss>